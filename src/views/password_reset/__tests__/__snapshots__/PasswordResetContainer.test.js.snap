// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests PasswordResetContainer Tests mounting of component 1`] = `
<Router
  history={
    Object {
      "action": "POP",
      "block": [Function],
      "createHref": [Function],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "push": [Function],
      "replace": [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Connect(PasswordResetForm)
      showModal={[MockFunction]}
    >
      <PasswordResetForm
        errors={Object {}}
        message={Object {}}
        resetPasswordLinkAction={[Function]}
        showModal={[MockFunction]}
      >
        <div>
          <Container
            className="reset"
            fluid={false}
          >
            <div
              className="reset container"
            >
              <div>
                <h1
                  className="resetmessage"
                >
                  Let's find your account
                </h1>
              </div>
              <Form
                inline={false}
                onSubmit={[Function]}
              >
                <form
                  className=""
                  onSubmit={[Function]}
                >
                  <FormControl
                    className="form-control "
                    name="email"
                    onChange={[Function]}
                    placeholder="Please enter your email"
                    required={true}
                    type="email"
                  >
                    <input
                      className="form-control  form-control"
                      name="email"
                      onChange={[Function]}
                      placeholder="Please enter your email"
                      required={true}
                      type="email"
                    />
                  </FormControl>
                  <div
                    className="invalid-feedback"
                  />
                  <div
                    className="reset-buttons"
                  >
                    <Link
                      to="/"
                    >
                      <a
                        href="/"
                        onClick={[Function]}
                      >
                        <Button
                          active={false}
                          className="reset-buttons"
                          disabled={false}
                          type="button"
                          variant="outline-danger"
                        >
                          <button
                            className="reset-buttons btn btn-outline-danger"
                            disabled={false}
                            type="button"
                          >
                            Cancel
                          </button>
                        </Button>
                      </a>
                    </Link>
                    <Button
                      active={false}
                      className="reset-buttons"
                      disabled={true}
                      type="submit"
                      variant="primary"
                    >
                      <button
                        className="reset-buttons btn btn-primary"
                        disabled={true}
                        type="submit"
                      >
                        Find account
                      </button>
                    </Button>
                  </div>
                </form>
              </Form>
            </div>
          </Container>
        </div>
      </PasswordResetForm>
    </Connect(PasswordResetForm)>
  </Provider>
</Router>
`;
